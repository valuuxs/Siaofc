const handler = async (m, { isOwner, isAdmin, conn, text, participants, args, command, usedPrefix }) => {

  if (usedPrefix == 'a' || usedPrefix == 'A') return;

  if (!(isAdmin || isOwner)) {
    global.dfail('admin', m, conn);
    throw false;
  }
  const pesan = args.join` `;
  const oi = `‚îÄ‚îÄ ùë¨ùëªùë∞ùë∏ùëºùë¨ùëªùë® ${pesan}`;
  let teks = `ùë®ùë™ùëªùë∞ùëΩùë¨ùëµùë∫ùë¨ ùë∂ ùë™ùëºùë∑ùë∂ üëãüèª\n\n *${oi}\n\n\n`;
  for (const mem of participants) {
    teks += `‚ñå@${mem.id.split('@')[0]}\n`;
  }
  teks += `‚ó• ùë∫ùíäùíÇ ùë©ùíêùíï ‚ó§`;
  conn.sendMessage(m.chat, { text: teks, mentions: participants.map((a) => a.id) });
};
handler.help = ['todos *<txt>*'];
handler.tags = ['gc'];
handler.command = /^(tagall1|t1|invocar1|marcar1|todos1|invocaci√≥n1)$/i;
handler.admin = true;
handler.group = true;
export default handler;